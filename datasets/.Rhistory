names(Full_dataset_alan)[names(Full_dataset_alan) == 'foreigners_home.x'] <- 'foreigners_home'
names(Full_dataset_alan)[names(Full_dataset_alan) == 'foreigners_home.y'] <- 'foreigners_away'
names(Full_dataset_alan)[names(Full_dataset_alan) == 'avg_attendance.x'] <- 'avg_attendance'
names(Full_dataset_alan)[names(Full_dataset_alan) == 'stadium_size.x'] <- 'stadium_size'
names(full_dataset_alan)[names(full_dataset_alan) == 'occupancy.x'] <- 'occupancy'
names(full_dataset_alan)[names(Full_dataset_alan) == 'occupancy.x'] <- 'occupancy'
names(Full_dataset_alan)[names(Full_dataset_alan) == 'occupancy.x'] <- 'occupancy'
full_dataset_alan <- full_dataset_alan %>% mutate(yel_card_spread = HY - AY, rating_diff = spi1-spi2, xg_diff = xg1 - xg2, age_diff = avg_age_home - avg_age_away, red_card_spread = HR - AR, importance_diff = importance1 - importance2  )
full_dataset_alan <- Full_dataset_alan %>% mutate(yel_card_spread = HY - AY, rating_diff = spi1-spi2, xg_diff = xg1 - xg2, age_diff = avg_age_home - avg_age_away, red_card_spread = HR - AR, importance_diff = importance1 - importance2  )
View(full_dataset_alan)
full_dataset_alan <- full_dataset_alan %>% mutate(covid = ifelse(Date > "01/04/2020", 1, 0))
View(full_dataset_alan)
str(full_dataset_alan)
full_dataset_alan <- full_dataset_alan %>% mutate(covid = ifelse(Date > "2020-04-01", 1, 0))
View(full_dataset_alan)
full_dataset_alan <- full_dataset_alan %>% mutate(home_win = ifelse(FTHG > FTAG, 1, 0))
full_dataset_alan <- full_dataset_alan %>% mutate(away_win = ifelse(FTHG < FTAG, 1, 0))
full_dataset_alan <- full_dataset_alan %>% mutate(draw = ifelse(FTHG == FTAG, 1, 0))
full_dataset_alan <- full_dataset_alan %>% mutate(home_points = ifelse(FTHG > FTAG, 3, ifelse(FTHG < FTAG, 0, 1)))
full_dataset_alan <- full_dataset_alan %>% mutate(away_points = ifelse(FTHG < FTAG, 3, ifelse(FTHG > FTAG, 0, 1)))
full_dataset_alan <- full_dataset_alan %>% mutate(yel_card_ratio_home = HY/HF)
full_dataset_alan <- full_dataset_alan %>% mutate(red_card_ratio_home = HY/HF)
full_dataset_alan <- full_dataset_alan %>% mutate(yel_card_ratio_away = AY/AF)
full_dataset_alan <- full_dataset_alan %>% mutate(red_card_ratio_away = AR/AF)
full_dataset_alan <- full_dataset_alan %>% mutate(home_points_percentage_total = home_points/(home_points + away_points))
full_dataset_alan <- full_dataset_alan %>% mutate(away_points_percentage_total = away_points/(home_points + away_points))
full_dataset_alan <- full_dataset_alan %>% mutate(shots_ratio_home = HST/HS)
full_dataset_alan <- full_dataset_alan %>% mutate(shots_ratio_away = AST/AS)
full_dataset_alan <- full_dataset_alan %>% mutate(goal_diff = FTHG - FTAG)
full_dataset_alan <- full_dataset_alan %>% mutate(diff_point = home_points - away_points)
write.csv(full_dataset_alan, "C:/Documents/thesis/datasets/final_dataset.csv", row.names = FALSE)
write.csv(full_dataset_alan, "C:/Documents/thesis/datasets/final_dataset.csv", row.names = FALSE, sep = ";")
install.packages('psych')
library(psych)
describe(full_dataset_alan)
x <- describe(full_dataset_alan)
png(here("thesis", "datasets","descriptive table"))
(x)
dev.off()
library(here)
pdf(here("thesis", "datasets","descriptive table"))
(x)
dev.off()
png("summarystatistics.png", height=1000, width=200)
p<-tableGrob(whole_by_season)
grid.arrange(p)
dev.off()
png("summarystatistics.png", height=1000, width=200)
p<-tableGrob(x)
grid.arrange(p)
dev.off()
png("summarystatistics.png", height=200, width=1000)
p<-tableGrob(x)
grid.arrange(p)
dev.off()
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(x)
grid.arrange(p)
dev.off()
View(full_dataset_alan)
important_stats <- cbind(full_dataset_alan[,4:28],full_dataset_alan[,31:32]. full_dataset_alan[,38:41], full_dataset_alan[,46:50], full_dataset_alan[,52:66])
important_stats <- cbind(full_dataset_alan[,4:28],full_dataset_alan[,31:32], full_dataset_alan[,38:41], full_dataset_alan[,46:50], full_dataset_alan[,52:66])
x <- describe(important_stats)
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(x)
grid.arrange(p)
dev.off()
summary(important_stats)
season18_19 <- full_dataset_alan %>% filter(season == 2018)
season19_20 <- full_dataset_alan %>% filter(season == 2019)
season20_21 <- full_dataset_alan %>% filter(season == 2020)
ghost_games <- full_dataset_alan %>% filter(covid == 1)
non_ghost_games <- full_dataset_alan %>% filter(covid !=1)
mci <- mean_ci(season18_19$diff_point)
str(mci)
install.packages("stargazer")
library(stargazer)
stargazer(important_stats)
descriptives <- stargazer(important_stats)
descriptives <- as.data.frame(stargazer(important_stats))
View(descriptives)
descriptives <- as.data.frame(stargazer(important_stats), important_stats)
descriptives <- data.frame(stargazer(important_stats), important_stats)
View(descriptives)
View(important_stats)
most_important_stats <- cbind(important_stats{, 1:2}, important_stats{, 8:9}, important_stats{, 12:24}, important_stats{, 34:35}, important_stats{, 37:41}, important_stats{, 46:47})
most_important_stats <- cbind(important_stats[, 1:2], important_stats[, 8:9], important_stats[, 12:24], important_stats[, 34:35], important_stats[, 37:41], important_stats[, 46:47])
x <- describe(most_important_stats)
summary(most_important_stats)
x
descrip<- stargazer(most_important_stats)
descrip <- as.data.frame(descrip)
View(descrip)
library(readr)
t1 <- stargazer(
most_important_stats[,columns], type = "text",
summary.stat = c("min", "p25", "median", "p75", "max", "median", "sd")
)
columns <- colnames(most_important_stats)
t1 <- stargazer(
most_important_stats[,columns], type = "text",
summary.stat = c("min", "p25", "median", "p75", "max", "median", "sd")
)
print(t1)
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(t1)
grid.arrange(p)
dev.off()
View(most_important_stats)
utmost_important_stats <- cbind(most_important_stats [,1:8], most_important_stats[, 11:14], most_important_stats[, 17:18], most_important_stats[, 20:26])
x <- describe(utmost_important_stats)
View(utmost_important_stats)
t1 <- stargazer(
utmost_important_stats[,columns], type = "text",
summary.stat = c("min", "p25", "median", "p75", "max", "median", "sd")
)
columns <- colnames(utmost_important_stats)
t1 <- stargazer(
utmost_important_stats[,columns], type = "text",
summary.stat = c("min", "p25", "median", "p75", "max", "median", "sd")
)
t1 <- stargazer(
utmost_important_stats[,columns], type = "text",
summary.stat = c("N", "min", "median","max", "median", "sd")
)
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(t1)
grid.arrange(p)
dev.off()
utmost_important_stats <- lapply(utmost_important_stats if int, as.numeric)
utmost_important_stats <-utmost_important_stats %>%
mutate_each(funs(if(is.integer(.)) as.numeric(.) else .))
columns <- colnames(utmost_important_stats)
t1 <- stargazer(
utmost_important_stats[,columns], type = "text",
summary.stat = c("N", "min", "median","max", "median", "sd")
)
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(t1)
grid.arrange(p)
dev.off()
t1 <- stargazer(
utmost_important_stats[,columns], type = "text",
summary.stat = c("N", "min", "median","max", "median", "sd")
digits = 2)
summary.stat = c("N", "min", "median","max", "median", "sd")
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(t1)
grid.arrange(p)
dev.off()
summary.stat = c("N", "min", "median","max", "median", "sd")
t1 <- stargazer(
utmost_important_stats[,columns], type = "text",digits = 2, decimals = 2,
summary.stat = c("N", "min", "median","max", "median", "sd")
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(t1)
grid.arrange(p)
dev.off()
t1 <- stargazer(
utmost_important_stats[,columns], type = "text",digits = 2, decimals = 2,
summary.stat = c("N", "min", "median","max", "median", "sd"))
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(t1)
grid.arrange(p)
dev.off()
t2 <- stargazer(utmost_important_stats, decimals = 2, digits = 2 )
table(t2)
t2 <- table(t2)
t2 <- stargazer(utmost_important_stats, decimals = 2, digits = 2 , type = "text")
png("summarystatistics.png", height=2000, width=3000)
p<-tableGrob(t2)
grid.arrange(p)
dev.off()
knitr::opts_chunk$set(echo = TRUE)
stargazer(most_important_stats, type = "html")
library(stargazer)
library(stargazer)
description<- stargazer(most_important_stats, type = "html")
description<- stargazer(utmost_important_stats, type = "html")
t2 <- stargazer(utmost_important_stats, decimals = 2, digits = 2 , type = "text", ci=TRUE, ci.level = 0.95)
install.packages("sjplot")
library(sjplot)
install.packages("sjPlot")
library(sjPlot)
sjt.df(utmost_important_stats,
file="stats_descriptives.doc")
sjt.utmost_improtant_stats(utmost_important_stats,
file="stats_descriptives.doc")
library(sjPlot)
sjt.df(utmost_important_stats,
file="stats_descriptives.doc")
tab_df(utmost_important_stats,
file="stats_descriptives.doc")
y <- tab_df(utmost_important_stats,
file="stats_descriptives.doc")
y <- tab_df(utmost_important_stats,
file="stats_descriptives.doc")
y <- tab_df(utmost_important_stats,
title = "Descriptive Statistics",
file="stats_descriptives.doc")
tab_df(utmost_important_stats,
title = "Descriptive Statistics",
file="stats_descriptives.docx")
stargazer(utmost_important_stats,
type = "html"
title = "Descriptive Statistics",
out="stats_descriptives.docx")
stargazer(utmost_important_stats,
type = "text"
title = "Descriptive Statistics",
out="stats_descriptives.docx")
stargazer(utmost_important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
stargazer(most_important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
stargazer(most_important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
View(important_stats)
View(full_dataset_alan)
full_dataset_alan <- full_dataset_alan %>% mutate(foul_spread = HF - AF)
important_stats <- cbind(full_dataset_alan[,1:2],full_dataset_alan[,21], full_dataset_alan[,24], full_dataset_alan[,27], full_dataset_alan[,30:34], full_dataset_alan[,37:38], full_dataset_alan[,39:40], full_dataset_alan[,45], full_dataset_alan[,52:56], full_dataset_alan[,61:62], full_dataset_alan[,67])
stargazer(most_important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
stargazer(most_important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
important_stats <- cbind(full_dataset_alan[,1:2],full_dataset_alan[,21], full_dataset_alan[,24], full_dataset_alan[,27], full_dataset_alan[,30:34], full_dataset_alan[,37:38], full_dataset_alan[,39:40], full_dataset_alan[,45], full_dataset_alan[,52:56], full_dataset_alan[,61:62], full_dataset_alan[,67])
stargazer(important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
stargazer(important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
important_stats <- cbind(full_dataset_alan[,1:2],full_dataset_alan[,21], full_dataset_alan[,24], full_dataset_alan[,27], full_dataset_alan[,30:34], full_dataset_alan[,37:38], full_dataset_alan[,39:40], full_dataset_alan[,45], full_dataset_alan[,52:56], full_dataset_alan[,61:62], full_dataset_alan[,67])
stargazer(important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
important_stats <- cbind(full_dataset_alan[,1:2],full_dataset_alan[,21], full_dataset_alan[,24], full_dataset_alan[,27], full_dataset_alan[,30:34], full_dataset_alan[,37:38], full_dataset_alan[,39:40], full_dataset_alan[,45], full_dataset_alan[,52:56], full_dataset_alan[,61:62], full_dataset_alan[ , 67])
stargazer(important_stats,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
View(full_dataset_alan)
important_statss <- cbind(full_dataset_alan[,1:2],full_dataset_alan[,21], full_dataset_alan[,24], full_dataset_alan[,27], full_dataset_alan[,30:34], full_dataset_alan[,37:38], full_dataset_alan[,39:40], full_dataset_alan[,45], full_dataset_alan[,52:56], full_dataset_alan[,61:62], full_dataset_alan[ , 67])
stargazer(important_statss,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
important_statss <- cbind(full_dataset_alan[,1:2],full_dataset_alan[,21 & 24], full_dataset_alan[,27 & 45 & 67], full_dataset_alan[,30:34], full_dataset_alan[,37:38], full_dataset_alan[,39:40], full_dataset_alan[,52:56], full_dataset_alan[,61:62])
stargazer(important_statss,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
important_statss <- cbind(full_dataset_alan[,1:2],full_dataset_alan$yel_card_spread, full_dataset_alan$age_diff,full_dataset_alan$occupancy, full_dataset_alan[,30:34], full_dataset_alan[,37:38], full_dataset_alan[,39:40],  full_dataset_alan[,52:56], full_dataset_alan[,61:62], full_dataset_alan$foul_spread)
stargazer(important_statss,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
utmost_important_stats <- cbind(most_important_stats [,1:8], most_important_stats[, 11:14], most_important_stats[, 17:18], most_important_stats[, 20:26])
View(utmost_important_stats)
utmost_important_stats <- utmost_important_stats[ , -which(names(utmost_important_stats) %in% c("HF", "AF", "HY", "AY", "AR", "HR", "foreigners_home", "foreigners_away", "stadium_size" , "avg_attendance"))]
View(utmost_important_stats)
utmost_important_stats <- cbind(utmost_important_stats, full_dataset_alan$spi1, full_dataset_alan$spi2, full_dataset_alan$prob1, full_dataset_alan$prob2, full_dataset_alan$probtie, full_dataset_alan$foul_spread)
stargazer(important_statss,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
most_important_stats <- cbind(important_stats[, 1:2], important_stats[, 8:9], important_stats[, 12:24], important_stats[, 34:35], important_stats[, 37:41], important_stats[, 46:47])
View(utmost_important_stats)
utmost_important_stats <- cbind(utmost_important_stats, full_dataset_alan$spi1 = "spi_home", full_dataset_alan$spi2 = "spi_away", full_dataset_alan$prob1 = "prob_home_win", full_dataset_alan$prob2 = "prob_away_win", full_dataset_alan$probtie = "prob_tie", full_dataset_alan$foul_spread = "foul_spread")
full_dataset_alan <- full_dataset_alan %>% mutate(foreigners_spread = foreigners_home - foreigners_away)
descriptivevariables <- cbind(full_dataset_alan [, 4:5], full_dataset_alan[, 24:25], full_dataset_alan[, 30:34], full_dataset_alan[, 37:40], full_dataset_alan [, 45:48], full_dataset_alan[, 52:56], full_dataset_alan[, 61:62], full_dataset_alan[, 67:68] )
View(descriptivevariables)
descriptivevariables <- descriptivevariables[ , -which(names(descriptivevariables) %in% c("avg_age_away", "rating_diff", "xg_diff"))]
stargazer(important_statss,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
stargazer(descriptivevariables,
type = "text",
title = "Descriptive Statistics",
out="stats_descriptives.docx")
mean(covid_data$home_win)
non_covid_data <- full_dataset %>% filter(covid != 1)
covid_data <- full_dataset_alan %>% filter(covid == 1)
non_covid_data <- full_dataset_alan %>% filter(covid != 1)
mean(covid_data$home_win)
mean(covid_data$away_win)
mean(covid_data$draw)
mean(non_covid_data$home_win)
mean(non_covid_data$away_win)
y<- mean(non_covid_data$home_win)
x<- mean(covid_data$home_win)
ggplot(x,y)
plot(x,y)
table <- table(x, y)
x <- mean(covid_data$home_win)
win_home_covid <- mean(covid_data$home_win)
win_home_covid <- mean(covid_data$home_win)
win_home_noncovid <- mean(non_covid_data$home_win)
win_away_covid <- mean(covid_data$away_win)
win_away_noncovid <- mean(non_covid_data$away_win)
job <- c("Home win covid","Home win",  "Away win covid", "Away win")
salary <- c(win_home_covid,win_home_noncovid,win_away_covid, win_away_noncovid)
df_mean_win <- data.frame(job, salary)
plot_mean_salary <- plot(ggplot(df_mean_win, aes(x = job, y = salary)) +
geom_bar(stat='identity')) +
xlab("Home vs Away wins") +
ylab("Average wins") +
ggtitle("Wins home and away pre and post covid") +
theme_minimal()
plot_mean_salary
situation <- c("Home win covid","Home win pre covid",  "Away win covid", "Away win pre covid")
meanwin <- c(win_home_covid,win_home_noncovid,win_away_covid, win_away_noncovid)
df_mean_win <- data.frame(job, salary)
plot_mean_win <- plot(ggplot(df_mean_win, aes(x = situation, y = meanwin)) +
geom_point(stat='identity')) +
xlab("Home vs Away wins") +
ylab("Average wins") +
ggtitle("Wins home and away pre and post covid") +
theme_minimal()
plot_mean_win
stargazer(plot_mean_win)
points_home_covid <-  mean(covid_data$home_points)
points_home_noncovid <- mean(non_covid_data$home_points)
points_away_covid <- mean(covid_data$away_points)
points_away_noncovid <- mean(non_covid_data$away_points)
situation2 <- c("Average points home covid","Average points home pre covid",  "Average points away covid", "Average points away pre covid")
meanpoints2 <- c(win_home_covid,win_home_noncovid,win_away_covid, win_away_noncovid)
df_mean_points <- data.frame(job, salary)
plot_mean_points <- plot(ggplot(df_mean_points, aes(x = situation2, y = meanpoints2)) +
geom_(stat='identity')) +
xlab("Home vs Away points") +
ylab("Average points") +
ggtitle("Points home and away pre and post covid") +
theme_minimal()
plot_mean_points <- plot(ggplot(df_mean_points, aes(x = situation2, y = meanpoints2)) +
geom_bar(stat='identity')) +
xlab("Home vs Away points") +
ylab("Average points") +
ggtitle("Points home and away pre and post covid") +
theme_minimal()
df_mean_points <- data.frame(situation2, meanpoints2)
plot_mean_points <- plot(ggplot(df_mean_points, aes(x = situation2, y = meanpoints2)) +
geom_bar(stat='identity')) +
xlab("Home vs Away points") +
ylab("Average points") +
ggtitle("Points home and away pre and post covid") +
theme_minimal()
plot_mean_points
meanpoints2 <- c(points_home_covid,points_home_noncovid,points_away_covid, points_away_noncovid)
df_mean_points <- data.frame(situation2, meanpoints2)
plot_mean_points <- plot(ggplot(df_mean_points, aes(x = situation2, y = meanpoints2)) +
geom_bar(stat='identity')) +
xlab("Home vs Away points") +
ylab("Average points") +
ggtitle("Points home and away pre and post covid") +
theme_minimal()
plot_mean_points
points_home_covid <-  mean(covid_data$home_points)
points_home_noncovid <- mean(non_covid_data$home_points)
points_away_covid <- mean(covid_data$away_points)
points_away_noncovid <- mean(non_covid_data$away_points)
situation2 <- c("Average points home covid", "Average points away covid","Average points home pre covid",  "Average points away pre covid")
meanpoints2 <- c(points_home_covid ,points_away_covid,points_home_noncovid ,points_away_noncovid)
df_mean_points <- data.frame(situation2, meanpoints2)
plot_mean_points <- plot(ggplot(df_mean_points, aes(x = situation2, y = meanpoints2)) +
geom_bar(stat='identity')) +
xlab("Home vs Away points") +
ylab("Average points") +
ggtitle("Points home and away pre and post covid") +
theme_minimal()
plot_mean_points
points_home_covid <-  mean(covid_data$home_points)
points_home_noncovid <- mean(non_covid_data$home_points)
points_away_covid <- mean(covid_data$away_points)
points_away_noncovid <- mean(non_covid_data$away_points)
situation2 <- c("Average points home covid", "Average points away covid","Average points home pre covid",  "Average points away pre covid")
meanpoints2 <- c(points_home_covid ,points_away_covid,points_home_noncovid ,points_away_noncovid)
df_mean_points <- data.frame(situation2, meanpoints2)
plot_mean_points <- plot(ggplot(df_mean_points, aes(x = situation2, y = meanpoints2)) +
geom_bar(stat='identity')) +
xlab("Home vs Away points") +
ylab("Average points") +
ggtitle("Points home and away pre and post covid") +
theme_minimal()
plot_mean_points
win_home_covid <- mean(covid_data$home_win)
win_home_noncovid <- mean(non_covid_data$home_win)
win_away_covid <- mean(covid_data$away_win)
win_away_noncovid <- mean(non_covid_data$away_win)
situation <- c("Home win covid","Away win covid","Home win pre covid", "Away win pre covid")
meanwin <- c(win_home_covid,win_away_covid, win_home_noncovid, win_away_noncovid)
df_mean_win <- data.frame(situation, meanwin)
plot_mean_win <- plot(ggplot(df_mean_win, aes(x = situation, y = meanwin)) +
geom_bar(stat='identity')) +
xlab("Home vs Away wins") +
ylab("Average wins") +
ggtitle("Wins home and away pre and post covid") +
theme_minimal()
plot_mean_win
points_home_covid <-  mean(covid_data$home_points)
points_home_noncovid <- mean(non_covid_data$home_points)
points_away_covid <- mean(covid_data$away_points)
points_away_noncovid <- mean(non_covid_data$away_points)
situation2 <- c("Average points home covid", "Average points away covid", "Average points home pre covid","Average points away pre covid")
meanpoints2 <- c(points_home_covid ,points_away_covid,points_home_noncovid ,points_away_noncovid)
df_mean_points <- data.frame(situation2, meanpoints2)
plot_mean_points <- plot(ggplot(df_mean_points, aes(x = situation2, y = meanpoints2)) +
geom_bar(stat='identity')) +
xlab("Home vs Away points") +
ylab("Average points") +
ggtitle("Points home and away pre and post covid") +
theme_minimal()
plot_mean_points
yel_card_spread_covid <-  mean(covid_data$yel_card_spread)
yel_card_spread_noncovid <- mean(non_covid_data$yel_card_spread)
foul_spread_covid <- mean(covid_data$foul_spread)
foul_spread_noncovid <- mean(non_covid_data$foul_spread)
situation3 <- c("Diff yellow cards home and away covid", "diff yellow cards home and away pre covid", "diff fouls covid","diff fouls pre covid")
meanspread <- c(yel_card_spread_covid , yel_card_spread_noncovid,foul_spread_covid ,foul_spread_noncovid)
df_mean_spread <- data.frame(situation3, meanspread)
plot_mean_card_foul_spread <- plot(ggplot(df_mean_spread, aes(x = situation3, y = meanspread)) +
geom_bar(stat='identity')) +
xlab("Cards and fouls distribution") +
ylab("Spread") +
ggtitle("Difference in fouls and cards between home and away teams before and after covid") +
theme_minimal()
plot_mean_card_foul_spread
yel_card_spread_covid <-  mean(covid_data$yel_card_spread)
yel_card_spread_noncovid <- mean(non_covid_data$yel_card_spread)
foul_spread_covid <- mean(covid_data$foul_spread)
foul_spread_noncovid <- mean(non_covid_data$foul_spread)
situation3 <- c("Diff yellow cards covid", "diff yellow cards  pre covid", "diff fouls covid","diff fouls pre covid")
meanspread <- c(yel_card_spread_covid , yel_card_spread_noncovid,foul_spread_covid ,foul_spread_noncovid)
df_mean_spread <- data.frame(situation3, meanspread)
plot_mean_card_foul_spread <- plot(ggplot(df_mean_spread, aes(x = situation3, y = meanspread)) +
geom_bar(stat='identity')) +
xlab("Cards and fouls distribution") +
ylab("Spread") +
ggtitle("Difference in fouls and cards between home and away teams before and after covid") +
theme_minimal()
plot_mean_card_foul_spread
yel_card_spread_covid <-  mean(covid_data$yel_card_spread)
yel_card_spread_noncovid <- mean(non_covid_data$yel_card_spread)
foul_spread_covid <- mean(covid_data$foul_spread)
foul_spread_noncovid <- mean(non_covid_data$foul_spread)
View(covid_data)
foul_spread_covid <- mean(covid_data$foul_spread)
foul_spread_noncovid <- mean(non_covid_data$foul_spread)
View(non_covid_data)
non_covid_data <- non_covid_data %>% filter(!is.na(foul_spread))
foul_spread_noncovid <- mean(non_covid_data$foul_spread)
situation3 <- c("Diff yellow cards covid", "diff yellow cards  pre covid", "diff fouls covid","diff fouls pre covid")
meanspread <- c(yel_card_spread_covid , yel_card_spread_noncovid,foul_spread_covid ,foul_spread_noncovid)
df_mean_spread <- data.frame(situation3, meanspread)
plot_mean_card_foul_spread <- plot(ggplot(df_mean_spread, aes(x = situation3, y = meanspread)) +
geom_bar(stat='identity')) +
xlab("Cards and fouls distribution") +
ylab("Spread") +
ggtitle("Difference in fouls and cards between home and away teams before and after covid") +
theme_minimal()
plot_mean_card_foul_spread
home_goals_covid <-  mean(covid_data$FTHG)
home_goals_noncovid <- mean(non_covid_data$FTHG)
away_goals_covid <- mean(covid_data$FTAG)
away_goals_noncovid <- mean(non_covid_data$FTAG)
home_cards_covid <-  mean(covid_data$HY)
home_cards_noncovid <- mean(non_covid_data$HYG)
away_cards_covid <- mean(covid_data$FTAG)
home_goals_noncovid <- mean(non_covid_data$FTHG)
non_covid_data <- non_covid_data %>% filter(!is.nafFTHG)
non_covid_data <- non_covid_data %>% filter(!is.na(FTHG)
non_covid_data <- non_covid_data %>% filter(!is.na(FTHG))
home_goals_covid <-  mean(covid_data$FTHG)
non_covid_data <- non_covid_data %>% filter(!is.na(FTHG))
home_goals_noncovid <- mean(non_covid_data$FTHG)
away_goals_covid <- mean(covid_data$FTAG)
away_goals_noncovid <- mean(non_covid_data$FTAG)
home_cards_covid <-  mean(covid_data$HY)
non_covid_data <- non_covid_data %>% filter(!is.na(HY))
home_cards_covid <-  mean(covid_data$HY)
home_cards_noncovid <- mean(non_covid_data$HY)
away_cards_covid <- mean(covid_data$FTAG)
away_cards_noncovid <- mean(non_covid_data$FTAG)
away_red_covid  <- mean(covid_data$AR)
away_red_non_covid <- mean(non_covid_data$AR)
non_covid_data <- non_covid_data %>% filter(!is.na(AR))
away_red_non_covid <- mean(non_covid_data$AR)
home_red_covid <- mean(covid_data$HR)
home_red_noncovid <- mean(non_covid_data$HR)
home_fouls_covid  <- mean(covid_data$HF)
home_fouls_noncovid <- mean(non_covid_data$HF)
away_fouls_covid  <- mean(covid_data$HF)
away_fouls_noncovid <- mean(non_covid_data$HF)
table(df_mean_spread)
away_cards_covid <- mean(covid_data$AY)
away_cards_noncovid <- mean(non_covid_data$AY)
away_fouls_covid  <- mean(covid_data$AF)
away_fouls_noncovid <- mean(non_covid_data$AF)
